{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\React\\\\temadex\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport './App.css';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport TemCard from './Tem/TemCard';\nimport background from './IMG/tetem.jpg';\nconst BackGround = styled.div`\n    background: url(${background}) no-repeat fixed center;\n    height: 225vh;\n    width: 100%;\n`;\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: rgba(125, 125, 125, .45);\n  height: 100%;\n  width: 100%;\n`;\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 2%;\n\n  a {\n    text-decoration: none;\n    margin: 2% .5% .3% .5%;\n  }\n`;\nconst SearchInput = styled.input`\n  width: 33%;\n  left: 33%;\n  text-align: center;\n  position: fixed;\n  color: royalblue;\n  border: 2px solid royalblue;\n  height: 3vh;\n  letter-spacing: 1px;\n  border-radius: 5px;\n\n  &::placeholder {\n    color: royalblue; \n    letter-spacing: .5px;\n  } \n`;\n\nfunction App() {\n  const [temtem, setTemTem] = useState();\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState();\n  const [selectedTem, setSelectedTem] = useState();\n  useEffect(() => {\n    axios.get(`https://temtem-api.mael.tech/api/temtems/`).then(res => {\n      setTemTem(res.data);\n      setSearchResults(res.data); // console.log('temtem', res)\n    }).catch(err => console.log('from app err', err));\n  }, []);\n  useEffect(() => {\n    axios.get(`https://temtem-api.mael.tech/api/techniques\n    `).then(res => {// console.log('types', res)\n    }).catch(err => console.log('from app err', err));\n  }, []);\n  useEffect(() => {\n    if (temtem) {\n      const results = temtem.filter(temtem => {\n        return temtem.name.toLowerCase().includes(search.toLowerCase()); //compare character to search\n        //types are at types[0]\n      }); //arr of results that is subset arr w/ matching serach\n\n      return setSearchResults(results);\n    }\n  }, [search]);\n\n  const onChange = e => {\n    setSearch(e.target.value);\n  };\n\n  if (!searchResults) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 12\n      }\n    }, \"loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(MainContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchInput, {\n    placeholder: \"What Temtem would you like?\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ContentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, searchResults.map((obj, index) => {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: `/${obj.name}`,\n      onClick: () => {\n        return setSelectedTem(obj);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TemCard, {\n      name: obj.name,\n      image: obj.wikiPortraitUrlLarge,\n      type: obj.types,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/:name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/React/temadex/src/App.js"],"names":["React","useEffect","useState","Link","Route","axios","styled","TemCard","background","BackGround","div","MainContainer","ContentContainer","SearchInput","input","App","temtem","setTemTem","search","setSearch","searchResults","setSearchResults","selectedTem","setSelectedTem","get","then","res","data","catch","err","console","log","results","filter","name","toLowerCase","includes","onChange","e","target","value","map","obj","index","wikiPortraitUrlLarge","types"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport './App.css';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport TemCard from './Tem/TemCard';\nimport background from './IMG/tetem.jpg';\n\nconst BackGround = styled.div`\n    background: url(${background}) no-repeat fixed center;\n    height: 225vh;\n    width: 100%;\n`;\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: rgba(125, 125, 125, .45);\n  height: 100%;\n  width: 100%;\n`;\n\nconst ContentContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 2%;\n\n  a {\n    text-decoration: none;\n    margin: 2% .5% .3% .5%;\n  }\n`;\n\nconst SearchInput = styled.input`\n  width: 33%;\n  left: 33%;\n  text-align: center;\n  position: fixed;\n  color: royalblue;\n  border: 2px solid royalblue;\n  height: 3vh;\n  letter-spacing: 1px;\n  border-radius: 5px;\n\n  &::placeholder {\n    color: royalblue; \n    letter-spacing: .5px;\n  } \n`;\n\n\nfunction App() {\n  const [temtem, setTemTem] = useState();\n  const [search, setSearch] = useState('')\n  const [searchResults, setSearchResults] = useState();\n  const [selectedTem, setSelectedTem] = useState();\n  useEffect( () => {\n    axios.get(`https://temtem-api.mael.tech/api/temtems/`)\n    .then(res => {\n      setTemTem(res.data)\n      setSearchResults(res.data)\n      // console.log('temtem', res)\n    })\n      \n    .catch(err=> console.log('from app err', err) \n    )\n  }, [])\n\n  useEffect (() => {\n    axios.get(`https://temtem-api.mael.tech/api/techniques\n    `)\n    .then(res => {\n   \n      // console.log('types', res)\n    })\n    .catch(err=> console.log('from app err', err) \n    )\n  },[])\n\n  useEffect(() => {\n    if(temtem){\n      const results = temtem.filter(temtem => {\n        return temtem.name.toLowerCase().includes(search.toLowerCase())//compare character to search\n        //types are at types[0]\n      }) //arr of results that is subset arr w/ matching serach\n  \n      return setSearchResults(results)\n    }\n\n  }, [search]);\n\n  const onChange = (e) => {\n    setSearch(e.target.value)\n  }\n\n  if(!searchResults){\n    return <div>loading...</div>\n  }\nreturn (\n    <MainContainer>\n\n      <Route exact path=\"/\">\n        <SearchInput placeholder=\"What Temtem would you like?\" onChange={onChange}></SearchInput >\n        <ContentContainer>\n          {/* <TemCard name={temtem.name} image={temtem.wikiPortraitUrlLarge} type={temtem.types} description={temtem.gameDescription}/> */}\n          {searchResults.map((obj, index) => {\n            return (\n            <Link to={`/${obj.name}`} onClick={() => {\n              return setSelectedTem(obj);\n              }}>\n              <TemCard name={obj.name} image={obj.wikiPortraitUrlLarge} type={obj.types} key={index}/>\n              </Link>\n            )\n          })}\n        </ContentContainer>\n      </Route>\n      <Route path=\"/:name\">\n          \n      </Route>\n\n    </MainContainer>\n\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}