{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\React\\\\temadex\\\\src\\\\Tem\\\\TemCard.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nconst CardContainer = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    flex-direction: column;\n    height: 150px;\n    width: 150px;\n    /* box-shadow: 5px 5px rgba(175, 175, 125, .4); */\n    background: cadetblue;\n    background: rgba(76, 234, 231, .3);\n    background-size: contain;\n    margin: .5%;\n    ${props => props.type === 'Digital' ? `box-shadow: 5px 5px grey;` : props.type === 'Water' ? `box-shadow: 5px 5px blue;` : props.type === 'Earth' ? `box-shadow: 5px 5px brown;` : props.type === 'Nature' ? `box-shadow: 5px 5px green;` : props.type === 'Electric' ? `box-shadow: 5px 5px yellow;` : props.type === 'Mental' ? `box-shadow: 5px 5px purple;` : props.type === 'Fire' ? `box-shadow: 5px 5px red;` : props.type === 'Crystal' ? `box-shadow: 5px 5px violet;` : props.type === 'Wind' ? `box-shadow: 5px 5px teal;` : props.type === 'Neutral' ? `box-shadow: 5px 5px dodgerblue;` : props.type === 'Melee' ? `box-shadow: 5px 5px orange;` : props.type === 'Toxix' ? `box-shadow: 5px 5px darkgreen;` : null}\n\n\n    span {\n        color: white;\n        margin: 1%;\n    }\n`;\nconst CardDescription = styled.div`\n    display: flex;\n\n\n\n`;\nconst CardDescriptionDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 70%;\n    padding: 1%;\n    line-height: 1.5;\n    color: white;\n    font-size: 1.5rem;\n\n    p {\n        font-size: 2rem;\n        padding: 0 0 1% 0;\n    }\n`;\nconst CardHeading = styled.h3`\n    display: flex;\n    justify-content: space-between; \n    font-size: 2rem;\n    width: 25%;\n    color: white;\n    margin-left: 1%;\n`;\nconst CardHeader = styled.img`\n    max-height: 105px;\n    width: 105px;\n    margin: 1% auto 0 auto;\n    box-shadow: 2px 2px 3px 3px rgba(76, 234, 231);\n    background: rgba(175, 175, 125, .4);\n    /* background: url('https://progameguides.com/wp-content/uploads/2020/01/featured-temtem-digital-types-list.jpg');\n    background-position-x: -150px;\n    background-size: contain; */\n`;\n\nconst TemCard = ({\n  name,\n  image,\n  type,\n  description\n}) => {\n  console.log(type[0]);\n  return /*#__PURE__*/React.createElement(CardContainer, {\n    type: type[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardDescription, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    src: image,\n    alt: \"temtem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(CardHeading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \" \", name, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Type(s): \", type.reduce((el, add) => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 58\n      }\n    }, `${el} ${add}`, \" \");\n  })));\n};\n\nexport default TemCard;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/React/temadex/src/Tem/TemCard.jsx"],"names":["React","styled","CardContainer","div","props","type","CardDescription","CardDescriptionDiv","CardHeading","h3","CardHeader","img","TemCard","name","image","description","console","log","reduce","el","add"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAI;;;;;;;;;;;MAW3BC,KAAK,IACLA,KAAK,CAACC,IAAN,KAAe,SAAf,GACC,2BADD,GAEAD,KAAK,CAACC,IAAN,KAAe,OAAf,GACC,2BADD,GAEAD,KAAK,CAACC,IAAN,KAAe,OAAf,GACC,4BADD,GAEAD,KAAK,CAACC,IAAN,KAAe,QAAf,GACC,4BADD,GAEAD,KAAK,CAACC,IAAN,KAAe,UAAf,GACC,6BADD,GAEAD,KAAK,CAACC,IAAN,KAAe,QAAf,GACC,6BADD,GAEAD,KAAK,CAACC,IAAN,KAAe,MAAf,GACC,0BADD,GAEAD,KAAK,CAACC,IAAN,KAAe,SAAf,GACC,6BADD,GAEAD,KAAK,CAACC,IAAN,KAAe,MAAf,GACC,2BADD,GAEAD,KAAK,CAACC,IAAN,KAAe,SAAf,GACC,iCADD,GAEAD,KAAK,CAACC,IAAN,KAAe,OAAf,GACC,6BADD,GAEAD,KAAK,CAACC,IAAN,KAAe,OAAf,GACC,gCADD,GAEA,IACA;;;;;;;CArCN;AA8CA,MAAMC,eAAe,GAAGL,MAAM,CAACE,GAAI;;;;;CAAnC;AAOA,MAAMI,kBAAkB,GAAGN,MAAM,CAACE,GAAI;;;;;;;;;;;;;CAAtC;AAeA,MAAMK,WAAW,GAAGP,MAAM,CAACQ,EAAG;;;;;;;CAA9B;AASA,MAAMC,UAAU,GAAGT,MAAM,CAACU,GAAI;;;;;;;;;CAA9B;;AAaA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeT,EAAAA,IAAf;AAAqBU,EAAAA;AAArB,CAAD,KAAwC;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAI,CAAC,CAAD,CAAhB;AACA,sBACA,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAEA,IAAI,CAAC,CAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAES,KAAjB;AAAwB,IAAA,GAAG,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAeD,IAAf,MAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgBR,IAAI,CAACa,MAAL,CAAY,CAACC,EAAD,EAAKC,GAAL,KAAa;AAAC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,GAAED,EAAG,IAAGC,GAAI,EAApB,MAAP;AAAsC,GAAhE,CAAhB,CALJ,CADA;AASH,CAXD;;AAaA,eAAeR,OAAf","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst CardContainer = styled.div`\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n    height: 150px;\r\n    width: 150px;\r\n    /* box-shadow: 5px 5px rgba(175, 175, 125, .4); */\r\n    background: cadetblue;\r\n    background: rgba(76, 234, 231, .3);\r\n    background-size: contain;\r\n    margin: .5%;\r\n    ${props =>\r\n    ( props.type === 'Digital'\r\n    ? `box-shadow: 5px 5px grey;`\r\n    : props.type === 'Water'\r\n    ? `box-shadow: 5px 5px blue;`\r\n    : props.type === 'Earth'\r\n    ? `box-shadow: 5px 5px brown;`\r\n    : props.type === 'Nature'\r\n    ? `box-shadow: 5px 5px green;`\r\n    : props.type === 'Electric'\r\n    ? `box-shadow: 5px 5px yellow;`\r\n    : props.type === 'Mental'\r\n    ? `box-shadow: 5px 5px purple;`\r\n    : props.type === 'Fire'\r\n    ? `box-shadow: 5px 5px red;`\r\n    : props.type === 'Crystal'\r\n    ? `box-shadow: 5px 5px violet;`\r\n    : props.type === 'Wind'\r\n    ? `box-shadow: 5px 5px teal;`\r\n    : props.type === 'Neutral'\r\n    ? `box-shadow: 5px 5px dodgerblue;`\r\n    : props.type === 'Melee'\r\n    ? `box-shadow: 5px 5px orange;`\r\n    : props.type === 'Toxix'\r\n    ? `box-shadow: 5px 5px darkgreen;`\r\n    : null\r\n    )}\r\n\r\n\r\n    span {\r\n        color: white;\r\n        margin: 1%;\r\n    }\r\n`;\r\n\r\nconst CardDescription = styled.div`\r\n    display: flex;\r\n\r\n\r\n\r\n`;\r\n\r\nconst CardDescriptionDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 70%;\r\n    padding: 1%;\r\n    line-height: 1.5;\r\n    color: white;\r\n    font-size: 1.5rem;\r\n\r\n    p {\r\n        font-size: 2rem;\r\n        padding: 0 0 1% 0;\r\n    }\r\n`;\r\n\r\nconst CardHeading = styled.h3`\r\n    display: flex;\r\n    justify-content: space-between; \r\n    font-size: 2rem;\r\n    width: 25%;\r\n    color: white;\r\n    margin-left: 1%;\r\n`;\r\n\r\nconst CardHeader = styled.img`\r\n    max-height: 105px;\r\n    width: 105px;\r\n    margin: 1% auto 0 auto;\r\n    box-shadow: 2px 2px 3px 3px rgba(76, 234, 231);\r\n    background: rgba(175, 175, 125, .4);\r\n    /* background: url('https://progameguides.com/wp-content/uploads/2020/01/featured-temtem-digital-types-list.jpg');\r\n    background-position-x: -150px;\r\n    background-size: contain; */\r\n`;\r\n\r\n\r\n\r\nconst TemCard = ({ name, image, type, description }) => {\r\n    console.log(type[0])\r\n    return (\r\n    <CardContainer type={type[0]}>\r\n        <CardDescription>\r\n            <CardHeader src={image} alt=\"temtem\" />\r\n        </CardDescription>\r\n        <CardHeading> {name} </CardHeading>\r\n        <span>Type(s): {type.reduce((el, add) => {return <span>{`${el} ${add}`} </span>})}</span>\r\n    </CardContainer>\r\n    )\r\n}\r\n\r\nexport default TemCard"]},"metadata":{},"sourceType":"module"}